import os
from datetime import datetime
import numpy as np

def create_bolivia_station_macro(macro_fname, input_fname, tmp_fname, out_fname, station, T0):

    current_time = datetime.now()

    # Check if 'macro' file exists and save it as a separate datestamped file if it does
    if os.path.exists(macro_fname):
        os.rename(macro_fname, macro_fname + str(current_time))

    # ------------------------ Printing macro commands to file: ------------------------
    f = open(macro_fname, "a")

    f.write(f"*****************************************************\n")
    f.write(f"* {station} MACRO FOR SYNTHETIC DATA  CREATED at {current_time} \n")
    f.write(f"*****************************************************\n\n\n\n")

    f.write("* Load station: \n")
    f.write(f"r {input_fname} \n")

    f.write(f"\n\n\n* --------------- change time parameters ---------------\n\n")

    # Changing O and T1 times:
    f.write("\n* Change O time for all data to event time\n")

    # Set reference time by writing 0 marker and subtracting everything relative to this
    # Event was on 160th Julian day
    f.write("CHNHDR O GMT 1994 160 00 33 16 040\n\n")
    f.write("chnhdr allt (0 - &1,o&) IZTYPE IO \n\n")

    f.write(f"chnhdr file 1 T0 {T0}\n")

    f.write(f"\n\n\n* -------- temporarily write out the files --------\n\n")

    # Now write the files so that when they are reloaded they are loaded only up to their cut points:
    f.write("\n* Write files temporarily - will be reloaded\n")
    f.write(f"w {tmp_fname} \n")

    f.write("\n* DELETE ALL FILES IN MEMORY: \n")
    f.write("dc 1")

    f.write("\n* Ensure traces are cut at pick\n")
    f.write("cut b T0 \n\n")

    # Core processing steps:
    f.write(f"\n\n\n* -------- begin data processing for YUNZ --------\n\n")
    f.write(f"r {tmp_fname} \n")

    f.write("\n* Remove the mean: \n")
    f.write("rmean\n\n")

    # f.write("* Remove instrument response\n")
    # f.write("transfer from evalresp to acc freql 0.0001 0.0002 1 2\n\n")

    f.write("* Lowpass filters:\n")
    f.write("lowpass butter corner 0.03 npoles 6 passes 1\n\n")

    f.write("* Resample to avoid aliasing\n")
    f.write("interpolate delta 0.2\n\n")

    if station == 'YUNZ':
        poles = 4
    elif np.logical_or(station == 'NNA', station == 'LPAZ'):
        poles = 2
    else:
        raise ValueError("Station name error")
    print(f'USING {poles} poles')

    f.write(f"* Highpass NOTE HERE THAT IT HAS {poles} POLES: \n")
    f.write(f"highpass butter corner 0.002 npoles {poles} passes 1\n\n")

    f.write("* Write files\n")
    f.write(f"w ./processed/{out_fname}")

    print("Created ", macro_fname)

    f.close()


def create_tohoku_macro(macro_fname, stations):
    # Check if 'macro' file exists and remove
    if os.path.exists(macro_fname):
        now = datetime.now()
        os.rename(macro_fname, macro_fname + str(now))
        # os.mkdir("./raw")

    # Printing macro commands to file:

    f = open(macro_fname, "a")

    f.write("* AUTOGENERATED MACRO: \n\n")

    write_out_str = 'w '
    f.write("* Load stations: \n")
    for i in range(len(stations)):
        stn_name = stations[i][0]

        if i == 0:
            f.write(f"r      ./raw/*{stn_name}*.sac\n")
        else:
            f.write(f"r more ./raw/*{stn_name}*.sac\n")

        write_out_str += f'./out/{stn_name}_proc.sac '

    # Changing O and T1 times:
    f.write("\n* Change O time for all data to event time\n")

    # Set reference time by writing 0 marker and subtracting everything relative to this
    f.write("CHNHDR O GMT 2011 70 05 46 23 019\n\n")
    f.write("chnhdr allt (0 - &1,o&) IZTYPE IO \n\n")

    for i in range(len(stations)):
        stn_name = stations[i][0]
        f.write(f"chnhdr file {str(int(i + 1))} T0 {T0[stn_name]}\n")
        # f.write(f"chnhdr file {str(int(i+1))} E {T0[stn_name]}\n")

    # Now write the files so that when they are reloaded they are loaded only up to their cut points:
    f.write("* Write files\n")
    f.write(write_out_str)

    f.write("\n* Ensure traces are cut at pick\n")
    f.write("cut b T0 \n\n")

    for i in range(len(stations)):
        stn_name = stations[i][0]
        if i == 0:
            f.write(f"r      ./out/*{stn_name}*.sac\n")
        else:
            f.write(f"r more ./out/*{stn_name}*.sac\n")

    f.write("\n* Remove the mean: \n")
    f.write("rmean\n\n")

    f.write("* Remove instrument response\n")
    f.write("transfer from evalresp to acc freql 0.0001 0.0002 1 2\n\n")

    f.write("* Lowpass filters:\n")
    f.write("lowpass butter corner 0.03 npoles 6 passes 1\n\n")

    f.write("* Resample to avoid aliasing\n")
    f.write("interpolate delta 0.2\n\n")

    f.write("* Highpass: \n")
    f.write("highpass butter corner 0.002 npoles 2 passes 1\n\n")

    f.write("* Write files\n")
    f.write(write_out_str)

    f.close()